// Mapbox

mapboxgl.accessToken = 'pk.eyJ1IjoibXJpZWRpamsiLCJhIjoiY2lzNzM1eWV6MDJkajJ0cG4xdjZzdTg4cCJ9.7OZRVApNk9iTjneT5Kx4Aw';
var map = new mapboxgl.Map({
  container: 'map',
  style: 'mapbox://styles/mapbox/satellite-v9',
  center: [0, 0],
  zoom: 3
});

///////////
// Mapbox layer switching

// Use these to keep track of which Source and Layer to delete
var previousSource = "";
var previousLayer = "";
var layerId = "";

// convenience for source and for layer names
// TODO - change to your Mapbox account name
var rootSourceUrlLayerId = {
  "rootSourceUrl": "mapbox://mriedijk.",
  "rootLayerId": "uniqueId-"
};

// Populate this list from those on Mapbox.com

//TODO this should be generated by the list currently at Mapbox.com/studio

// pad a leading zero on the month, as that's how the month code data came from NASA.
function pad(d) {
  return (d < 10) ? '0' + d.toString() : d.toString();
}

var root = "MY1DMM_CHLORA";
// TODO Javascript range??
var months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var years = [2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016];

var month;
var year;

var tilesNASAGeoTiffsLayerIds = [];

for (year = 0; year < years.length; year++) {
  for (month = 0; month < months.length; month++) {

    // special case for 2002 & 16
    if (years[year] == 2016 && months[month] > 7) {
      // do nothing
    } else if (years[year] == 2002 && months[month] < 8) {
      // do nothing
    } else {
      lyr = root + "_" + years[year] + "-" + pad(months[month]);
      tilesNASAGeoTiffsLayerIds.push(lyr);
    }
  }
}

console.log(tilesNASAGeoTiffsLayerIds.length);

/**
 * load -
 * Fired immediately after all necessary resources have been downloaded
 * and the first visually complete rendering of the map has occurred.
 */
map.on('load', function() {
  switchLayer(0);
});

function switchLayer(layer) {
  layerId = tilesNASAGeoTiffsLayerIds[layer];
  // document.getElementById("dataSet").innerHTML = layerId;
  /*
    Update sources and layers
  */

  try {
    currentSource = rootSourceUrlLayerId.rootSourceUrl + layerId;
    map.addSource(currentSource, {
      "url": currentSource,
      "type": "raster"
    });

    currentLayer = rootSourceUrlLayerId.rootLayerId + layerId;
    map.addLayer({
      "id": currentLayer,
      "type": "raster",
      "source": currentSource,
      "interactive": true,
      "layout": {
        "visibility": "visible"
      }
    });

    // Remove older layer
    try {
      map.removeLayer(previousLayer);
    } catch (err) {
      console.log(previousLayer + " " + err.message);
    } finally {
      previousLayer = currentLayer;
    }

  } catch (err) {
    console.log(currentSource + " " + err.message);
  }

}

function outputUpdate(sliderIndex) {
  // document.querySelector('#dataSet').value = tilesNASAGeoTiffsLayerIds[sliderIndex];
  console.log(tilesNASAGeoTiffsLayerIds[sliderIndex]);
  switchLayer(sliderIndex);
}

///////////

// MetricsGraphics.js
console.clear();
var mouseOverIndex = 0;
var timerId = 0;
var rawData;
var concentrationData;

d3.json('./js/8-day.json', function(data) {

  rawData = data;
  var concentrationData = parseData(data);
  var z = MG.data_graphic({
    mouseover: function(d, i) {
      timerId = setTimeout(function() {
        mouseOverIndex = i;
      }, 50);
    },
    mouseout: function(d, i) {
      clearTimeout(timerId);
    },
    title: "",
    description: "",
    data: concentrationData,
    markers: [],
    y_axis: false,
    width: $(document).width(),
    height: 150,
    target: "#result",
  });

});

function parseData(input) {
  var data = [];
  for (var i = 0; i < input.length; i++) {
    var d = input[i].date;
    var y = new Date(d);
    v = input[i].threshold_none;
    data.push({
      date: MG.clone(y),
      value: v
    });
  }
  return data;
}

d3.select('#result').on('click',
  function() {

    var dateClicked = new Date(rawData[mouseOverIndex].date);

    console.log("clicked on  " + rawData[mouseOverIndex].date + " = " + dateClicked);

    var y = dateClicked.toLocaleString("en-us", {
      year: "numeric"
    });
    var m = dateClicked.toLocaleString("en-us", {
      month: "2-digit"
    });

    var layer = "MY1DMM_CHLORA_" + y + "-" + m;

    var indexClicked = tilesNASAGeoTiffsLayerIds.indexOf(layer);

    pts = "indexClicked = " + indexClicked + ", Updating Map to " + layer;
    console.log(pts);

    try {
      switchLayer(indexClicked);
    } catch (err) {
      console.log(err.message);
    }
  });
